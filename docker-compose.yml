x-app-base: &app-base
  build: ./app
  restart: always
  environment:
    - PORT=3000
  volumes:
    - ./data/config:/app/config

services:
  app_blue:
    <<: *app-base
    profiles: ["blue","all"]
    environment:
      - APP_ENV=blue

  app_green:
    <<: *app-base
    profiles: ["green","all"]
    environment:
      - APP_ENV=green

  redis:
    image: redis
    profiles: ["core","all"]
    restart: always
    ports:
      - "127.0.0.1:6379:6379"

  postgres:
    image: postgres:16
    profiles: ["core","all","db"]
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./certbot/conf:/etc/letsencrypt
  #     - ./certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  nginx:
    image: nginx:alpine
    profiles: ["core","all"]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/includes:/etc/nginx/includes:ro
      - ./nginx/locations:/etc/nginx/locations:ro
      - ./nginx/upstreams:/etc/nginx/upstreams:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    restart: always

volumes:
  postgres_data:
